#include <iostream>
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#define SIZE 5
#define OVERFLOW 0
typedef struct QNode
{
    int date;
    struct QNode *next;
}QNode,*QueuePtr;

typedef struct{
    QueuePtr front;
    QueuePtr rear;
}LinkQueue;

void Init(LinkQueue &Q);
void EnQueue(LinkQueue &Q,int e);
int DeQueue(LinkQueue &Q,int &e);
void GetHead(LinkQueue Q,int &e);

int main()
{
    LinkQueue Q;
    Init(Q);
    int i,j;
    for(i=0;i<SIZE-1;i++)
    {
        scanf("%d",&j);
        EnQueue(Q,j);
    }
    DeQueue(Q,j);
    printf("删除的队头元素为：%d",j);
    GetHead(Q,j);
    printf("剩余的队头元素为：%d",j);
    return 0;
}

void Init(LinkQueue &Q)
{
    Q.front=Q.rear=(QueuePtr)malloc(sizeof(QNode));
    if(!Q.front)exit(1);
    Q.front->next=NULL;
}

void EnQueue(LinkQueue &Q,int e)
{
    QueuePtr p;
    p=(QueuePtr)malloc(sizeof(QNode));
    if(!p)exit(1);
    p->date=e;
    p->next=NULL;
    Q.rear->next=p;
    Q.rear=p;
}

int DeQueue(LinkQueue &Q,int &e)
{
    if(Q.front==Q.rear) return -1;
    QueuePtr p=Q.front->next;
    e=p->date;
    Q.front->next=p->next;
    free(p);
    return 1;
}
void GetHead(LinkQueue Q,int &e)
{
    e=(Q.front->next)->date;

}