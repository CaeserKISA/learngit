#include <iostream>
#include <stdio.h>
#include <stdlib.h>
typedef struct CirNode{
    int data;
    int number;
    struct CirNode*next;
}CirNode, * CirList;

void creatCirList(CirList &L,int n);
void JosephCircle(CirList &L,int m);

int main()
{
    CirList L;
    int n,m;
    scanf("%d,%d",&n,&m);
    creatCirList(L,n);
    JosephCircle(L,m);
    free(L);
    return 0;
}

void creatCirList(CirList & L,int n)
{
    CirList rear,k;
    int i;
    L=rear=(CirList)malloc(sizeof(CirNode));
    for(i=0;i<n-1;i++)
    {
        k=(CirList)malloc(sizeof(CirNode));
        if(!L)exit(1);
        rear->next=k;
        rear=k;
    }
    rear->next=L;
    k=L;
    for(i=0;i<n;i++)
    {
        k->number=i+1;
        scanf("%d",&k->data);
        k=k->next;
    }
}
void JosephCircle(CirList &L,int m)
{
    CirList p=L,front=L;
    int i;
    while(front->next!=L)
        front=front->next;
    while(p->next!=p)
    {
        for(i=0;i<m-1;i++)
        {
            p=p->next;
            front=front->next;
        }
        printf("%4d",p->number);
        m=p->data;
        front->next=p->next;
		free(p);
        p=front->next;
    }
    printf("%4d",p->number);
}